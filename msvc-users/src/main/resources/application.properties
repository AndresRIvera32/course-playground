spring.application.name=msvc-users
server.port=${PORT:8001}

# if we are using kubernetes the name of the host should be the host name of the service exposed as 'mysqldb'
# kubectl expose deployment mysqldb --port=3306 --type=ClusterIP
spring.datasource.url=jdbc:mysql://${DB_HOST:mysqldb:3306}/${DB_DATABASE:msvc_users}?serverTimezone=America/Bogota&allowPublicKeyRetrieval=false
spring.datasource.username=${DB_USERNAME:root}
spring.datasource.password=${DB_PASSWORD:sasa}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
spring.jpa.generate-ddl=true
logging.level.org.hibernate.SQL=debug


logging.file.path=/maindir/logs

#if we are using kubernetes the name of the host should be the host name of the service exposed as 'msvc-courses'
#for example if the service is this one: kubectl expose deployment msvc-courses --port=8001 --type=LoadBalancer
#msvc.courses.url=${COURSES_URL:msvc-courses:8002}

# This is not longer necessary since the communication is going to be between the microservice and the
# kubernetes service
# msvc.courses.url=${COURSES_URL:localhost:8002}

spring.cloud.kubernetes.secrets.enable-api=true
spring.cloud.kubernetes.discovery.all-namespaces=true

#This configuration exposes all the features in all the endpoints that comes with "spring actuator" which includes
#metrics and health checks
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
management.endpoint.health.probes.enabled=true
#liveness
management.health.livenessstate.enabled=true
#readiness
management.health.readinessstate.enabled=true
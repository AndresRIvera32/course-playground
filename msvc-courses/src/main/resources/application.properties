spring.application.name=msvc-courses
server.port=8002
#host.docker.internal will work if we want to connect to an external component outside the container

#if we connect the db using the customize network we need to use the name of the container and the
#private port in this case the db container is running in 5432 and container ports are 5433:5432
#5433:5432 the right side is the private port
spring.datasource.url=jdbc:postgresql://${DB_HOST:localhost:5432}/msvc_courses
spring.datasource.username=postgres
spring.datasource.password=12345
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.generate-ddl=true
logging.level.org.hibernate.SQL=debug

spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# This is not longer necessary since the communication is going to be between the microservice and the
# kubernetes service
# msvc.users.url=${USERS_URL:localhost:8001}

spring.cloud.kubernetes.secrets.enable-api=true
spring.cloud.kubernetes.discovery.all-namespaces=true


#This configuration exposes all the features in all the endpoints that comes with "spring actuator" which includes
#metrics and health checks
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
management.endpoint.health.probes.enabled=true
#liveness
management.health.livenessstate.enabled=true
#readiness
management.health.readinessstate.enabled=true